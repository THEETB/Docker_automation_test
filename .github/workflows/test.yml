# This is a basic workflow to help you get started with Actions

name: R-4.1.3_Torsten

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # strategy:
    #   matrix:
    #     python-version: [3.7, 3.8]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout 
        uses: actions/Checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.Docker_Hub_Username }}
          password: ${{ secrets.Docker_Hub_Password }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          username: ${{ secrets.Docker_Hub_Username }}
          password: ${{ secrets.Docker_Hub_Password }}
          tag: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Runs a single command using the runners shell
      # - name: Setting up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v2
      #   with:
      #       python-version: ${{ matrix.python-version }}

      # # Runs a set of commands using the runners shell
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # - name: Lint the code with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
      # - name: Test with unittest
      #   run: |
      #     python -m unittest discover
